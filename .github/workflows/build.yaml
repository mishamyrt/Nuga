name: Build app

on:
  workflow_call:
    inputs:
      linux-appimage:
        default: false
        type: boolean
      mac-notarize:
        default: false
        type: boolean

env:
  GO_VERSION: '1.22.2'
  WAILS_VERSION: '2.8.0'
  PNPM_VERSION: '9.0.4'

jobs:
  build:
    name: App
    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest]
    env:
      KEYCHAIN_NAME: macos-build
      KEYCHAIN_PROFILE: nuga-notary
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}
          cache-dependency-path: go.sum
      - name: Setup pnpm
        uses: pnpm/action-setup@v3
        with:
          run_install: |
              cwd: ui/
              args: [--frozen-lockfile]
          version: ${{ env.PNPM_VERSION }}
      - name: Setup Linux deps
        if: runner.os == 'Linux'
        run: |
          sudo apt update
          sudo apt install -y libudev-dev libwebkit2gtk-4.0-dev libgtk-3-dev
      - name: Setup macOS deps
        if: runner.os == 'macOS'
        run: brew install hidapi
      - name: Setup Wails
        run: go install github.com/wailsapp/wails/v2/cmd/wails@v${WAILS_VERSION}
      - name: Install go deps
        run: go mod tidy
      # Linux build
      - name: Build x86_64 binary
        if: runner.os == 'Linux'
        run: make build/linux
      - name: Build AppImage
        if: runner.os == 'Linux' && inputs.linux-appimage
        run: make linux-builder/appimage
      # macOS build
      - name: Build applications
        if: runner.os == 'macOS'
        run: make build/darwin
      - name: Import certificate
        if: runner.os == 'macOS'
        uses: mishamyrt/import-codesign-certs@v2
        with:
          p12-file-base64: ${{ secrets.APPLE_CERT_DATA }}
          p12-password:  ${{ secrets.APPLE_CERT_PASSWORD }}
          keychain: ${{ env.KEYCHAIN_NAME }}
          keychain-password: ${{ secrets.APPLE_CERT_PASSWORD }}
      - name: Sign applications
        if: runner.os == 'macOS'
        shell: bash
        env:
          APPLE_TEAM_ID: ${{ secrets.APPLE_TEAM_ID }}
          KEYCHAIN_NAME: ${{ env.KEYCHAIN_NAME }}.keychain
        run: ./scripts/workflows/sign-mac.sh dist/Nuga*.app
      - name: Notarize applications
        if: runner.os == 'macOS' && inputs.mac-notarize
        shell: bash
        env:
          APPLE_USER_NAME: ${{ secrets.APPLE_USER_NAME }}
          APPLE_USER_PASSWORD: ${{ secrets.APPLE_USER_PASSWORD }}
          APPLE_TEAM_ID_SHORT: ${{ secrets.APPLE_TEAM_ID_SHORT }}
        run: |
          xcrun notarytool store-credentials \
            --apple-id "$APPLE_USER_NAME" \
            --password "$APPLE_USER_PASSWORD" \
            --team-id "$APPLE_TEAM_ID_SHORT" \
            "$KEYCHAIN_PROFILE"
          ./scripts/workflows/notarize-mac.sh dist/Nuga*.zip
      - name: Upload binary
        uses: actions/upload-artifact@v4
        with:
          name: ${{ runner.os }}-dist
          path: ./dist
